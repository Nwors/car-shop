{"ast":null,"code":"var _jsxFileName = \"/home/if/test/src/components/CarsPage/CarPage/CarPage.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./CarPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CarPage() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const useDidMountEffect = (func, deps) => {\n    _s();\n\n    const didMount = useRef(false);\n    useEffect(() => {\n      if (didMount.current) func();else didMount.current = true;\n    }, deps);\n  };\n\n  _s(useDidMountEffect, \"pOysHxGDAe5NFamaAuKx7OGo+cM=\");\n\n  const location = useLocation();\n  const names = [\"Брэнд\", \"Модель\", \"Год производства\", \"Тип кузова\", \"Общий пробег\"];\n  const [img, setImg] = useState({});\n  const [carData, setCarData] = useState({});\n  const [options, setOptions] = useState([]);\n  const [car, setCar] = useState({});\n  useEffect(() => {\n    console.log(location.pathname.split('/').pop());\n    axios(\"http://localhost:8888/cars/get-car-by-id\", {\n      params: {\n        id: location.pathname.split('/').pop()\n      }\n    }).then(it => setCarData(it.data));\n  }, []);\n  useDidMountEffect(() => {\n    //setImg(JSON.parse(carData.photo))\n    let options = carData.map(it => it.option_name);\n    setImg(carData[0].photo);\n    setCar(carData[0]);\n    setOptions(options);\n  }, [carData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"name\",\n      children: car.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"price\",\n      children: `${car.price} ₽`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      style: {\n        backgroundImage: `url(\"http://localhost:8888/uploads/${img}\")`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), names.map((name, index) => {}), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field-name top-name\",\n      children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: car.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CarPage, \"/9mUVMME5a87oYAK2ycHVqWD5LU=\", false, function () {\n  return [useLocation, useDidMountEffect];\n});\n\n_c = CarPage;\nexport default CarPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarPage\");","map":{"version":3,"sources":["/home/if/test/src/components/CarsPage/CarPage/CarPage.jsx"],"names":["React","useEffect","useRef","useState","axios","useLocation","CarPage","useDidMountEffect","func","deps","didMount","current","location","names","img","setImg","carData","setCarData","options","setOptions","car","setCar","console","log","pathname","split","pop","params","id","then","it","data","map","option_name","photo","name","price","backgroundImage","index","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport axios from \"axios\";\nimport {useLocation} from \"react-router-dom\";\nimport \"./CarPage.css\"\n\nfunction CarPage() {\n    const useDidMountEffect = (func, deps) => {\n        const didMount = useRef(false);\n        useEffect(() => {\n            if (didMount.current) func();\n            else didMount.current = true;\n        }, deps);\n    }\n\n    const location = useLocation();\n    const names = [\"Брэнд\", \"Модель\", \"Год производства\", \"Тип кузова\", \"Общий пробег\"]\n    const [img, setImg] = useState({})\n    const [carData, setCarData] = useState({})\n    const [options, setOptions] = useState([])\n    const [car, setCar] = useState({})\n    useEffect(() => {\n        console.log(location.pathname.split('/').pop())\n        axios(\"http://localhost:8888/cars/get-car-by-id\", {\n            params: {\n                id: location.pathname.split('/').pop()\n            }\n        }).then(it => setCarData(it.data))\n    }, [])\n\n    useDidMountEffect(() => {\n        //setImg(JSON.parse(carData.photo))\n        let options = carData.map(it => it.option_name)\n        setImg(carData[0].photo)\n        setCar(carData[0])\n        setOptions(options)\n    }, [carData])\n\n    return (\n        <div className={\"car-page-container\"}>\n        <span className={\"name\"}>{car.name}</span>\n        <span className={\"price\"}>{`${car.price} ₽`}</span>\n        <div className={\"image-container\"} style={{backgroundImage: `url(\"http://localhost:8888/uploads/${img}\")`}}>\n        </div>\n            {names.map((name, index) => {\n            })}\n            <div className={\"field-name top-name\"}>Описание: </div>\n            <ul>\n            </ul>\n            <div className={\"description\"}>{car.description}</div>\n\n\n        </div>\n    );\n}\n\nexport default CarPage;"]},"metadata":{},"sourceType":"module"}