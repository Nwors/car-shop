{"ast":null,"code":"var _jsxFileName = \"/home/if/test/src/components/CreateAdForm/UpdateForm/UpdateForm.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport './UpdateForm.css';\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport axios from \"axios\";\nimport { Car } from \"../../../Structures/Car\";\nimport { TechnicalCharacteristics } from \"../../../Structures/TechnicalCharacteristics\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateForm(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const useDidMountEffect = (func, deps) => {\n    _s();\n\n    const didMount = useRef(false);\n    useEffect(() => {\n      if (didMount.current) func();else didMount.current = true;\n    }, deps);\n  };\n\n  _s(useDidMountEffect, \"pOysHxGDAe5NFamaAuKx7OGo+cM=\");\n\n  const location = useLocation();\n  const history = useHistory();\n  const [carData, setCarData] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [car, setCar] = useState({});\n  useEffect(() => {\n    let id = location.pathname.split('/').pop();\n    if (isNaN(id)) history.push('/cars');\n    axios(\"http://75f9ffd4c830.ngrok.io/cars/get-car-by-id\", {\n      params: {\n        id: location.pathname.split('/').pop()\n      }\n    }).then(it => {\n      setCarData(it.data);\n    });\n  }, []);\n  useDidMountEffect(() => {\n    let options = carData.map(it => it.option_name);\n    setCar(carData[0]);\n    setOptions(options);\n  }, [carData]);\n  useDidMountEffect(() => {\n    setAllOptions(options);\n  }, [options]);\n  useDidMountEffect(() => {\n    console.log(car);\n    setValue('name', car.name);\n    setValue('description', car.description);\n    setValue('telephone', car.contacts);\n    setValue('price', car.price);\n\n    if (car.body != null) {\n      setValue('check-box', true);\n      displayCharacteristics();\n      setValue('label', car.brand);\n      setValue('model', car.model);\n      setValue('year', car.productionyear);\n      setValue('body', car.body);\n      setValue('raceDistance', car.mileage);\n    }\n  }, [car]);\n  let [characteristicsFlag, setCharacteristicsFlag] = useState(false);\n  const [allOptions, setAllOptions] = useState([]);\n\n  const handleDelete = id => () => {\n    const items = allOptions.filter(item => item !== id);\n    unregister(`option${id}`);\n    setAllOptions(items);\n  };\n\n  const displayCharacteristics = () => {\n    setCharacteristicsFlag(!characteristicsFlag);\n  };\n\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch,\n    unregister\n  } = useForm();\n\n  const onSubmit = data => {\n    let characteristics;\n    console.log(\"Данные\", data);\n    if (characteristicsFlag) characteristics = new TechnicalCharacteristics(data.label, data.model, data.year, data.body, data.raceDistance);\n    let car = new Car(data.name, data.description, undefined, data.price, data.telephone, characteristics, Object.keys(data).filter(it => it.includes(\"option\")).map(it => data[it]));\n    let bodyFormData = new FormData();\n    bodyFormData.append(\"car\", JSON.stringify(car));\n    bodyFormData.append(\"image\", data.images[0]);\n    console.log(\"Машина\", car);\n    axios({\n      url: \"http://75f9ffd4c830.ngrok.io/cars/update-car\",\n      method: \"POST\",\n      data: bodyFormData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(it => console.log(it));\n  };\n\n  const onError = errors => {\n    console.log(errors);\n  };\n\n  console.log(watch()); //console.log(formState.errors)\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"ad-form\",\n    onSubmit: handleSubmit(onSubmit, onError),\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title\",\n        children: \"\\u041E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0430\\u0432\\u0442\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"text\",\n        ...register('name', {\n          required: \"Пожалуйста введите название\"\n        }),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0430\\u0432\\u0442\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"*\\u043D\\u0435 \\u0431\\u043E\\u043B\\u0435\\u0435 40 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432 (\\u043D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: Chevrolet lacetti).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        ...register('description', {\n          required: \"Пожалуйста введите описание\"\n        }),\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"*\\u043D\\u0435 \\u0431\\u043E\\u043B\\u0435\\u0435 256 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formFile\",\n      className: \"mb-3 drop-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0438 \\u0438\\u043B\\u0438 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            errors: errors,\n            name: \"images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...register('images', {\n          required: \"Прикрепите хотябы одно изображение\",\n          validate: {\n            lessThan10MB: files => {\n              var _files$;\n\n              return ((_files$ = files[0]) === null || _files$ === void 0 ? void 0 : _files$.size) < 10000000 || 'Максимальный размер 10 Мб';\n            },\n            acceptedFormats: files => {\n              var _files$2;\n\n              return ['image/jpeg', 'image/png', 'image/jpg'].includes((_files$2 = files[0]) === null || _files$2 === void 0 ? void 0 : _files$2.type) || 'Поддерживаются следующие форматы: PNG, JPEG, JPG';\n            }\n          }\n        }),\n        type: \"file\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"*\\u0434\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u043C\\u044B\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u044B .jpg .png .jpeg.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"telephone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n        ...register('telephone', {\n          required: \"Пожалуйста введите телефонный номер\",\n          validate: {\n            isNumber: it => !isNaN(it.slice(1)) || \"Введите корректный номер\",\n            checkFirst: it => !(isNaN(it) && it !== '+') || \"Введите корректный номер\"\n          },\n          minLength: {\n            value: 11,\n            message: \"Минимальная длина 11 символов (с кодом страны 12)\"\n          },\n          maxLength: {\n            value: 12,\n            message: \"Максимальная длина 12\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"*\\u0432 \\u043C\\u0435\\u0436\\u0434\\u0443\\u043D\\u0430\\u0440\\u043E\\u0434\\u043D\\u043E\\u043C \\u0438\\u043B\\u0438 \\u043E\\u0431\\u044B\\u0447\\u043D\\u043E\\u043C \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u0426\\u0435\\u043D\\u0430 \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438 \\u0432 \\u0440\\u0443\\u0431\\u043B\\u044F\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...register('price', {\n          required: \"Пожалуйста введите цену\",\n          validate: {\n            isNumber: it => !isNaN(it) || \"Введите корректную цену\",\n            aboveZero: it => !(it < 0) || \"Введите корректную цену\",\n            toHigh: it => !(it >= 2000000000000) || \"Введите корректуню цену\"\n          }\n        }),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0446\\u0435\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"*\\u0446\\u0435\\u043B\\u043E\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicCheckbox\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, { ...register('check-box'),\n        onChange: () => displayCharacteristics(),\n        type: \"checkbox\",\n        label: \"\\u0423\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0442\\u0435\\u0445\\u043D\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u0445\\u0430\\u0440\\u0430\\u043A\\u0442\\u0435\\u0440\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438 \\u043C\\u0430\\u0448\\u0438\\u043D\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: `mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u041C\\u0430\\u0440\\u043A\\u0430 \\u043C\\u0430\\u0448\\u0438\\u043D\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...(() => {\n          if (characteristicsFlag) return { ...register('label', {\n              required: \"Пожалуйста введите марку\"\n            })\n          };\n          return {};\n        })(),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043C\\u0430\\u0440\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: `mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u041C\\u043E\\u0434\\u0435\\u043B\\u044C \\u043C\\u0430\\u0448\\u0438\\u043D\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...(() => {\n          if (characteristicsFlag) return { ...register('model', {\n              required: \"Пожалуйста введите модель\"\n            })\n          };\n          return {};\n        })(),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043C\\u043E\\u0434\\u0435\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: `mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u0413\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...(() => {\n          if (characteristicsFlag) return { ...register('year', {\n              required: \"Пожалуйста введите год производства\",\n              validate: {\n                isNumber: it => !isNaN(it) || \"Введите корректный год производства\",\n                aboveZero: it => !(it < 1800) || \"Введите корректный год производства\",\n                toHigh: it => !(it > new Date().getFullYear()) || \"Введите корректный год производства\"\n              }\n            })\n          };\n          return {};\n        })(),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: `mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u0422\\u0438\\u043F \\u043A\\u0443\\u0437\\u043E\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...(() => {\n          if (characteristicsFlag) return { ...register('body', {\n              required: \"Пожалуйста введите тип кузова\"\n            })\n          };\n          return {};\n        })(),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043A\\u0443\\u0437\\u043E\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: `mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u041F\\u0440\\u043E\\u0431\\u0435\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"raceDistance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...(() => {\n          if (characteristicsFlag) return { ...register('raceDistance', {\n              required: \"Пожалуйста введите пробег\",\n              validate: {\n                isNumber: it => !isNaN(it) || \"Введите корректный пробег\",\n                aboveZero: it => !(it < 0) || \"Введите корректный пробег\",\n                toHigh: it => !(it > 2000000000) || \"Введите корректный пробег\"\n              }\n            })\n          };else return {};\n        })(),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0431\\u0435\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicCheckbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            const id = Math.floor(Math.random() * 999999);\n            setAllOptions([...allOptions, id]);\n          },\n          className: \"add-option\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0443\\u044E \\u043E\\u043F\\u0446\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), allOptions.map(itId => /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: `mb-3`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"add-option\",\n          onClick: handleDelete(itId),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0430\\u044F \\u043E\\u043F\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: `option${itId}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"additional-option\",\n          ...register(`option${itId}`, {\n            required: \"Пожалуйста введите опцию\"\n          }),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0443\\u044E \\u043E\\u043F\\u0446\\u0438\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this)]\n    }, itId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(UpdateForm, \"Se6zNJrlTESDysyZJe5S0AxEOFo=\", false, function () {\n  return [useLocation, useHistory, useDidMountEffect, useDidMountEffect, useDidMountEffect, useForm];\n});\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["/home/if/test/src/components/CreateAdForm/UpdateForm/UpdateForm.jsx"],"names":["React","useEffect","useRef","useState","Button","Form","FormControl","useForm","ErrorMessage","axios","Car","TechnicalCharacteristics","useHistory","useLocation","UpdateForm","props","useDidMountEffect","func","deps","didMount","current","location","history","carData","setCarData","options","setOptions","car","setCar","id","pathname","split","pop","isNaN","push","params","then","it","data","map","option_name","setAllOptions","console","log","setValue","name","description","contacts","price","body","displayCharacteristics","brand","model","productionyear","mileage","characteristicsFlag","setCharacteristicsFlag","allOptions","handleDelete","items","filter","item","unregister","register","handleSubmit","formState","errors","watch","onSubmit","characteristics","label","year","raceDistance","undefined","telephone","Object","keys","includes","bodyFormData","FormData","append","JSON","stringify","images","url","method","headers","onError","required","validate","lessThan10MB","files","size","acceptedFormats","type","isNumber","slice","checkFirst","minLength","value","message","maxLength","aboveZero","toHigh","Date","getFullYear","Math","floor","random","itId"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport './UpdateForm.css'\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport axios from \"axios\";\nimport {Car} from \"../../../Structures/Car\";\nimport {TechnicalCharacteristics} from \"../../../Structures/TechnicalCharacteristics\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\n\n\nfunction UpdateForm(props) {\n\n    const useDidMountEffect = (func, deps) => {\n        const didMount = useRef(false);\n        useEffect(() => {\n            if (didMount.current) func();\n            else didMount.current = true;\n        }, deps);\n    }\n    const location = useLocation()\n    const history = useHistory()\n    const [carData, setCarData] = useState([])\n    const [options, setOptions] = useState([])\n    const [car, setCar] = useState({})\n\n    useEffect(() => {\n        let id = location.pathname.split('/').pop()\n        if(isNaN(id)) history.push('/cars')\n        axios(\"http://75f9ffd4c830.ngrok.io/cars/get-car-by-id\", {\n            params: {\n                id: location.pathname.split('/').pop()\n            }\n        }).then(it => {setCarData(it.data)})\n    }, [])\n\n    useDidMountEffect(() => {\n        let options = carData.map(it => it.option_name)\n        setCar(carData[0])\n        setOptions(options)\n    }, [carData])\n\n    useDidMountEffect(() => {\n        setAllOptions(options)\n    }, [options])\n\n\n    useDidMountEffect(() => {\n        console.log(car)\n        setValue('name', car.name)\n        setValue('description', car.description)\n        setValue('telephone', car.contacts)\n        setValue('price', car.price)\n        if(car.body != null) {\n            setValue('check-box', true)\n            displayCharacteristics()\n            setValue('label', car.brand)\n            setValue('model', car.model)\n            setValue('year', car.productionyear)\n            setValue('body', car.body)\n            setValue('raceDistance', car.mileage)\n        }\n    }, [car])\n\n    let [characteristicsFlag, setCharacteristicsFlag] = useState(false)\n    const [allOptions, setAllOptions] = useState([])\n\n    const handleDelete = (id) => () => {\n        const items = allOptions.filter(item => item !== id);\n        unregister(`option${id}`)\n        setAllOptions(items)\n    }\n\n    const displayCharacteristics = () => {setCharacteristicsFlag(!characteristicsFlag)}\n\n    const {register, setValue, handleSubmit, formState: { errors }, watch, unregister} = useForm()\n\n    const onSubmit = (data) => {\n        let characteristics\n        console.log(\"Данные\", data)\n\n        if(characteristicsFlag) characteristics = new TechnicalCharacteristics(data.label, data.model, data.year, data.body, data.raceDistance)\n\n        let car = new Car(data.name, data.description, undefined, data.price, data.telephone, characteristics, Object.keys(data)\n            .filter(it => it.includes(\"option\")).map(it => data[it])\n        )\n        let bodyFormData = new FormData();\n        bodyFormData.append(\"car\",JSON.stringify(car))\n        bodyFormData.append(\"image\", data.images[0])\n\n        console.log(\"Машина\", car)\n        axios({\n            url: \"http://75f9ffd4c830.ngrok.io/cars/update-car\",\n            method: \"POST\",\n            data: bodyFormData,\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        }).then(it => console.log(it))\n    }\n    const onError = (errors) => {console.log(errors)}\n\n    console.log(watch())\n    //console.log(formState.errors)\n    return (\n        <Form className={\"ad-form\"} onSubmit={handleSubmit(onSubmit, onError)}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <div className={\"form-title\"}>Отредактируйте поля</div>\n                <Form.Label>Название авто</Form.Label>\n                <div className={\"error-message\"}><ErrorMessage errors={errors} name=\"name\" /></div>\n                <FormControl type={\"text\"} {...register('name', {required: \"Пожалуйста введите название\"})}\n                 placeholder=\"Введите название авто\" />\n                <Form.Text className=\"text-muted\">\n                    *не более 40 символов (например: Chevrolet lacetti).\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Описание</Form.Label>\n                <div className={\"error-message\"}><ErrorMessage errors={errors} name=\"description\" /></div>\n                <Form.Control as=\"textarea\" {...register('description', {required: \"Пожалуйста введите описание\"})} type=\"text\" placeholder=\"Введите описание\" />\n                <Form.Text className=\"text-muted\">\n                    *не более 256 символов.\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formFile\" className=\"mb-3 drop-form\">\n\n                <Form.Label>Загрузите фотографии или изображения</Form.Label>\n                <div>\n                    <div className={\"error-message\"}><ErrorMessage errors={errors} name=\"images\" /></div>\n                </div>\n                <Form.Control {...register('images', {\n                    required: \"Прикрепите хотябы одно изображение\",\n                    validate: {\n                        lessThan10MB: files => files[0]?.size < 10000000 || 'Максимальный размер 10 Мб',\n                        acceptedFormats: files =>\n                            ['image/jpeg', 'image/png','image/jpg'].includes(\n                                files[0]?.type\n                            ) || 'Поддерживаются следующие форматы: PNG, JPEG, JPG',\n                    },\n                })}  type=\"file\" multiple/>\n                {/*<FileUploader*/}\n                {/*    types={[\"JPG\", \"PNG\"]}*/}\n                {/*    name=\"file\"*/}\n                {/*/>*/}\n                <div>\n                    <Form.Text className=\"text-muted\">\n                    *допустимые форматы .jpg .png .jpeg.\n                     </Form.Text>\n                </div>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <Form.Label >Номер телефона</Form.Label>\n                <div className={\"error-message\"}><ErrorMessage errors={errors} name=\"telephone\" /></div>\n                <Form.Control  placeholder=\"Введите телефон\"{...register('telephone', {required: \"Пожалуйста введите телефонный номер\",\n                    validate: {\n                    isNumber: it => !isNaN(it.slice(1)) || \"Введите корректный номер\",\n                    checkFirst: it => !(isNaN(it) && it !== '+') || \"Введите корректный номер\"\n                    },\n                    minLength: {\n                    value: 11,\n                    message: \"Минимальная длина 11 символов (с кодом страны 12)\"\n                    },\n                    maxLength: {\n                    value: 12,\n                    message: \"Максимальная длина 12\"\n                    }})}/>\n                <Form.Text className=\"text-muted\">\n                    *в международном или обычном формате.\n                </Form.Text>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <Form.Label >Цена продажи в рублях</Form.Label>\n                <div className={\"error-message\"}><ErrorMessage errors={errors} name=\"price\" /></div>\n                <Form.Control {...register('price', {required: \"Пожалуйста введите цену\", validate: {\n                    isNumber: it => !isNaN(it) || \"Введите корректную цену\",\n                    aboveZero: it => !(it < 0)  || \"Введите корректную цену\",\n                    toHigh: it => !(it >= 2000000000000) || \"Введите корректуню цену\"\n                    }})}  placeholder=\"Введите цену\" />\n                <Form.Text className=\"text-muted\">\n                    *целое количество\n                </Form.Text>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                <Form.Check {...register('check-box')} onChange={() => displayCharacteristics()} type=\"checkbox\" label=\"Указать технические характеристики машины\" />\n            </Form.Group>\n            <Form.Group className={`mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`}>\n                <Form.Label>Марка машины</Form.Label>\n                <div className=\"error-message\"><ErrorMessage errors={errors} name=\"label\" /></div>\n                <Form.Control {...(() => {\n                    if (characteristicsFlag) return {...register('label',\n                            {required: \"Пожалуйста введите марку\"}\n                        )}\n                    return {}\n                })()} placeholder=\"Введите марку\" />\n            </Form.Group>\n            <Form.Group className={`mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`}>\n                <Form.Label>Модель машины</Form.Label>\n                <div className={\"error-message\"}><ErrorMessage errors={errors} name=\"model\" /></div>\n                <Form.Control {...(() => {\n                    if (characteristicsFlag) return {...register('model',\n                            {required: \"Пожалуйста введите модель\"}\n                        )}\n                    return {}\n                })()} placeholder=\"Введите модель\" />\n            </Form.Group>\n            <Form.Group className={`mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`}>\n                <Form.Label>Год производства</Form.Label>\n                <div className=\"error-message\"><ErrorMessage errors={errors} name=\"year\" /></div>\n                <Form.Control {...(() => {\n                    if (characteristicsFlag) return {...register('year', {required: \"Пожалуйста введите год производства\" , validate: {\n                        isNumber: it => !isNaN(it) || \"Введите корректный год производства\",\n                        aboveZero: it => !(it < 1800)  || \"Введите корректный год производства\",\n                        toHigh: it => !(it > new Date().getFullYear()) || \"Введите корректный год производства\"\n                        }})}\n                    return {}\n                })()}  placeholder=\"Введите год производства\" />\n            </Form.Group>\n            <Form.Group className={`mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`}>\n                <Form.Label>Тип кузова</Form.Label>\n                <div className=\"error-message\"><ErrorMessage errors={errors} name=\"body\" /></div>\n                <Form.Control {...(() => {\n                    if (characteristicsFlag) return {...register('body',\n                            {required: \"Пожалуйста введите тип кузова\"}\n                        )}\n                    return {}\n                })()} placeholder=\"Введите тип кузова\" />\n            </Form.Group>\n            <Form.Group className={`mb-3 ${characteristicsFlag ? \"slider\" : \"slider slider-closed\"}`}>\n                <Form.Label>Пробег</Form.Label>\n                <div className=\"error-message\"><ErrorMessage errors={errors} name=\"raceDistance\" /></div>\n                <Form.Control {...(() => {\n                    if(characteristicsFlag) return {...register('raceDistance',\n                            {required: \"Пожалуйста введите пробег\", validate: {\n                                    isNumber: it => !isNaN(it) || \"Введите корректный пробег\",\n                                    aboveZero: it => !(it < 0)  || \"Введите корректный пробег\",\n                                    toHigh: it => !(it > 2000000000) || \"Введите корректный пробег\"\n                                }}\n                        )}\n                    else return {}\n                })()} placeholder=\"Введите пробег\" />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                <span><Button onClick={() => {\n                    const id = Math.floor(Math.random() * 999999)\n                    setAllOptions([\n                        ...allOptions,\n                        id\n                    ])\n                }} className={\"add-option\"}>+</Button></span>\n                <span>Добавить дополнительную опцию</span>\n            </Form.Group>\n            {allOptions.map(itId =>\n                <Form.Group className={`mb-3`} key = {itId}>\n                    <span><Button className={\"add-option\"} onClick={handleDelete(itId)}>-</Button></span>\n                    <Form.Label>Дополнительная опция</Form.Label>\n                    <div className=\"error-message\"><ErrorMessage errors={errors} name={`option${itId}`}/></div>\n                    <span><Form.Control className={\"additional-option\"} {...register(`option${itId}`,\n                    {required: \"Пожалуйста введите опцию\"})}  placeholder=\"Введите дополнительную опцию\" /></span>\n                </Form.Group>\n            )}\n            <Button  variant=\"primary\" type=\"submit\">\n                Опубликовать\n            </Button>\n        </Form>\n    );\n}\n\nexport default UpdateForm;"]},"metadata":{},"sourceType":"module"}